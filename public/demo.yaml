openapi: 3.0.0
info:
  title: Storage API
  description: Student Demo API by Oliabka
  contact:
    name: Oliabka
    url: https://github.com/oliabka
  version: 1.0.0
servers:
  - url: http://u8191132-lab3.local/v1
paths:
  /items:
    post:
      tags:
        - items
      summary: Add new item to storage
      operationId: create_items
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "JÄRVFJÄLLET"
                description:
                  type: string
                  example: "Office chair with armrests, Grann white"
                amount_in_stock:
                  type: integer
                  example: 250
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /items/{id}:
    get:
      tags:
        - items
      summary: Finds info for a specific item
      operationId: show_item_by_id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: include
          in: query
          required: false
          schema:
            type: string
            example: shipments
          description: If set to shipments, adds all related shipment data for the item
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1
                  name:
                    type: string
                    example: "JÄRVFJÄLLET"
                  description:
                    type: string
                    example: "Office chair with armrests, Grann white"
                  amount:
                    type: integer
                    format: int32
                    example: 250
                  shipments:
                    type: array
                    items:
                      $ref: "#/components/schemas/Shipment"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - items
      summary: Updates all info about a specific item
      operationId: update_item_by_id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        description: "Item info that needs to be updated"
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "JÄRVFJÄLLET"
                description:
                  type: string
                  example: "Office chair with armrests, Grann white"
                amount_in_stock:
                  type: integer
                  example: 250
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - items
      summary: Updates select info about a specific item
      operationId: update_item_info_by_id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        description: "Item info that needs to be updated"
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "JÄRVFJÄLLET"
                description:
                  type: string
                  example: "Office chair with armrests, Grann white"
                amount_in_stock:
                  type: integer
                  example: 250
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - items
      summary: Deletes a specific item from storage
      operationId: delete_item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    nullable: true
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Item:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "JÄRVFJÄLLET"
        description:
          type: string
          example: "Office chair with armrests, Grann white"
        amount:
          type: integer
          format: int32
          example: 250
    Shipment:
      type: object
      required:
        - id
        - supplier
        - date_time
        - amount
        - item_id
      properties:
        id:
          type: integer
          format: int64
          example: 1
        supplier:
          type: string
          example: "Kraftman"
        date_time:
          type: string
          pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$
          example: "2017-10-24 04:27:50"
        amount:
          type: integer
          format: int32
          example: 250
        item_id:
          type: integer
          format: int64
          example: 1
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          enum:
            - 401
            - 403
            - 404
            - 400
            - 500
          example: 400
        message:
          type: string
          example: "Invalid value for..."
        meta:
          type: object
